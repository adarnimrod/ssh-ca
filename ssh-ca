#!/bin/sh -e

error () {
    echo "$1"
    exit 1
}

[ $(which ssh-keygen) ] || \
    error "Can't find ssh-keygen. Is OpenSSH installed properly?"

key_types="dsa ecdsa ed25519 rsa"

usage () {
    echo "Usage: $0 init|newuser|newhost"
}

init () {
    echo Initializing new CA.
    mkdir -p hosts users
    ssh-keygen -qf CA -P "" -C ssh-ca
}

is_initialized () {
    if [ ! -r "CA" ] || [ ! -r "CA.pub" ] || [ ! -d "users" ] || [ ! -d "hosts" ]
    then
        error "Something seems wrong. Did you run $0 init?"
    fi
}

signuser () {
    [ -z "$1" ] && error "You must specify username."
    for type in $key_types
    do
        if [ -r "users/$1/id_${type}.pub" ]
        then
            echo "Signing user $1 $type key."
            ssh-keygen -s CA -I "$1" -n "$1" "users/$1/id_${type}.pub"
            local flag="not empty"
        fi
    done
    [ -n "$flag" ] ||  echo "Didn't find any public keys for $1."
}

signhost () {
    [ -z "$1" ] && error "You must specify hostname."
    for type in $key_types
    do
        if [ -r "hosts/$1/ssh_host_${type}_key.pub" ]
        then
            echo "Signing host $1 $type key."
            ssh-keygen -s CA -I "$1" -h -n "$1" \
                "hosts/$1/ssh_host_${type}_key.pub"
            local flag="not empty"
        fi
    done
    [ -n "$flag" ] || echo "Didn't find any public keys for $1."
}

newhost () {
    [ -z "$1" ] && error "You must specify hostname."
    echo "Creating new host $1 keypair."
    mkdir -p "hosts/$1"
    for type in $key_types
    do
        ssh-keygen -qf "hosts/$1/ssh_host_${type}_key" -P "" -C "$1"
    done
    signhost "$1"
}

newuser () {
    [ -z "$1" ] && error "You must specify username."
    mkdir -p "users/$1"
    for type in $key_types
    do
        echo "Creating new user $1 $type keypair."
        ssh-keygen -qf "users/$1/id_${type}" -P "" -C "$1"
    done
    signuser "$1"
}

if [ $# -lt 1 ]
then
    usage
    exit 1
fi

case "$1" in
    init)
        init
        ;;
    signuser)
        is_initialized
        signuser "$2"
        ;;
    signhost)
        is_initialized
        signhost "$2"
        ;;
    newhost)
        is_initialized
        newhost "$2"
        ;;
    newuser)
        is_initialized
        newuser "$2"
        ;;
    *)
        usage
        exit 1
        ;;
esac
